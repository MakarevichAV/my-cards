{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/sampleReducer.js","redux/reducers/authReducer.js","redux/reducers/directoryReducer.js","redux/reducers/setReducer.js","redux/reducers/cardReducer.js","redux/reducers/rootReducer.js","redux/store/configureStore.js","components/LoginForm.js","redux/actions/authActions.js","components/RegisterForm.js","pages/LoginPage.js","components/Confirm.js","components/Header.js","redux/actions/directoryActions.js","components/Loader.js","components/SearchPopup.js","components/DirectoryTile.js","pages/HomePage.js","redux/actions/setActions.js","components/SetTile.js","pages/SetsPage.js","redux/actions/cardActions.js","components/CardEditMode.js","components/CardViewMode.js","components/Card.js","pages/Creator.js","pages/Viewer.js","App.js","index.js"],"names":["initialState","user","error","sampleReducer","state","arguments","length","undefined","action","type","payload","userI","successMessage","isAuthenticated","localStorage","getItem","isLogin","authReducer","setItem","username","userId","_id","message","directoryReducer","map","directory","id","isEditing","name","editedName","image","editedImage","filter","setsCount","setReducer","set","directoryId","cardsCount","cardReducer","card","phrase","editedPhrase","transcription","editedTranscription","note","editedNote","example1","editedExample1","translation","editedTranslation","example2","editedExample2","setId","rootReducer","combineReducers","sample","auth","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","axios","LoginForm","_ref","onSubmit","setUsername","useState","password","setPassword","dispatch","useDispatch","useSelector","React","createElement","value","onChange","e","target","className","onClick","handleLogin","async","response","post","concat","data","JSON","stringify","login","style","color","RegisterForm","confirmPassword","setConfirmPassword","useEffect","handleRegister","_ref2","register","LoginPage","formData","setFormData","navigate","useNavigate","handleFormSubmit","src","alt","toggleMode","Confirm","onCancel","onConfirm","confirmRef","useRef","handleClickOutside","event","current","document","addEventListener","removeEventListener","ref","connect","onAddDirectory","getState","newDirectory","storedUser","parse","_error$response","_error$response2","_error$response3","console","status","headers","onLogout","removeItem","showAddDirectory","showGoToBack","showGoToSets","isConfirmOpen","setIsConfirmOpen","handleToDirsClick","display","Fragment","handleToSetsClick","handleExitClick","handleCancelConfirm","handleConfirmExit","Loader","SearchPopup","onClose","onImageSelect","searchQuery","setSearchQuery","searchResults","setSearchResults","isLoading","setIsLoading","handleSearch","get","encodeURIComponent","hits","onKeyDown","key","placeholder","result","handleImageSelect","imageUrl","previewURL","backgroundImage","backgroundSize","mapStateToProps","ownProps","find","dir","onEdit","editDirectory","onSave","saveDirectory","put","onDelete","delete","deleteDirectory","isSearching","setIsSearching","setIsEditing","localEditedName","setLocalEditedName","localEditedImage","setLocalEditedImage","selectedImage","setSelectedImage","imageStyle","backgroundPosition","backgroundRepeat","width","height","marginRight","borderRadius","handleSave","handleDeleteClick","handleEdit","directoryName","handleSearchClose","handleSearchClick","directories","onGetDirectories","isAddingDirectory","setIsAddingDirectory","setError","fetchData","reversedDirectories","Array","isArray","reverse","Header","DirectoryTile","Object","assign","updateDirectorySetsCount","editSet","saveSet","deleteSet","updatedSetsCount","minWidth","handleToCreatorClick","setName","handleToViewerClick","maxLength","sets","mapDispatchToProps","onGetSets","getSets","onAddSet","newSet","addSet","_location$state","useLocation","useParams","reversedSets","SetTile","updateSetCardsCount","getCards","CardEditMode","isChanged","handleInputChange","handleDelete","localEditedPhrase","setLocalEditedPhrase","localEditedTranscription","setLocalEditedTranscription","localEditedNote","setLocalEditedNote","localEditedExample1","setLocalEditedExample1","localEditedTranslation","setLocalEditedTranslation","localEditedExample2","setLocalEditedExample2","CardViewMode","defaultImage","isFlipped","setIsFlipped","handleFlip","editCard","saveCard","deleteCard","updatedCardsCount","creating","setIsChanged","valueSetter","cards","onGetCards","onAddCard","addCard","newCard","activeIndex","setActiveIndex","reversedCards","addingCard","setAddingCard","backgroundColor","Carousel","interval","onSelect","index","Item","Card","viewing","App","isUserAuthenticated","Router","Routes","Route","path","element","HomePage","Navigate","to","replace","SetsPage","Creator","Viewer","store","root","createRoot","getElementById","navigator","window","serviceWorker","then","registration","log","scope","render","Provider","StrictMode"],"mappings":"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","file":"static/js/main.a2666a49.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\nexport const ADD_DIRECTORY = 'ADD_DIRECTORY';\r\nexport const EDIT_DIRECTORY = 'EDIT_DIRECTORY';\r\nexport const SAVE_DIRECTORY = 'SAVE_DIRECTORY';\r\nexport const DELETE_DIRECTORY = 'DELETE_DIRECTORY';\r\nexport const GET_DIRECTORIES = 'GET_DIRECTORIES';\r\n\r\nexport const ADD_SET = 'ADD_SET';\r\nexport const EDIT_SET = 'EDIT_SET';\r\nexport const SAVE_SET = 'SAVE_SET';\r\nexport const DELETE_SET = 'DELETE_SET';\r\nexport const GET_SETS = 'GET_SETS';\r\n\r\nexport const UPDATE_DIRECTORY_SETS_COUNT = 'UPDATE_DIRECTORY_SETS_COUNT';\r\n\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const EDIT_CARD = 'EDIT_CARD';\r\nexport const SAVE_CARD = 'SAVE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\nexport const GET_CARDS = 'GET_CARDS';\r\n\r\nexport const UPDATE_SET_CARDS_COUNT = 'UPDATE_SET_CARDS_COUNT';","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  user: null,\r\n  error: null,\r\n};\r\n\r\nconst sampleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_SUCCESS:\r\n    case actionTypes.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case actionTypes.LOGIN_FAILURE:\r\n    case actionTypes.REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sampleReducer;","const initialState = {\r\n  user: null,\r\n  userI: null,\r\n  error: null,\r\n  successMessage: null,\r\n  isAuthenticated: localStorage.getItem('isAuthenticated') === 'true',\r\n  isLogin: true,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      localStorage.setItem('isAuthenticated', 'true');\r\n      return { ...state, user: action.payload.user.username, userId: action.payload.user._id, error: null, isAuthenticated: true };\r\n    case 'LOGIN_FAILURE':\r\n      localStorage.setItem('isAuthenticated', 'false');\r\n      return { ...state, user: null, error: action.payload, isAuthenticated: false };\r\n    case 'LOGOUT':\r\n      localStorage.setItem('isAuthenticated', 'false');\r\n      return { ...state, user: null, error: null, isAuthenticated: false };\r\n    case 'REGISTER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        error: null,\r\n        successMessage: action.payload.message, // Extract success message from the API response\r\n      };\r\n    case 'REGISTER_FAILURE':\r\n      return { ...state, user: null, error: action.payload };\r\n    case 'SET_IS_LOGIN':\r\n      return { ...state, isLogin: action.payload };\r\n    case 'SET_SUCCESS_MESSAGE':\r\n      return {\r\n        ...state,\r\n        successMessage: action.payload,\r\n      };\r\n    case 'CLEAR_SUCCESS_MESSAGE':\r\n      return {\r\n        ...state,\r\n        successMessage: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initialState = [];\r\n\r\nconst directoryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_DIRECTORY':\r\n            const updatedState = state.map((directory) =>\r\n                directory._id === action.payload.id\r\n                    ? { ...directory, isEditing: false, name: action.payload.editedName, image: action.payload.editedImage }\r\n                    : directory\r\n            );\r\n            return updatedState;\r\n\r\n        case 'DELETE_DIRECTORY':\r\n            return state.filter((directory) => directory._id !== action.payload.id);\r\n\r\n        case 'ADD_DIRECTORY':\r\n            // Добавляем новую директорию в режиме редактирования\r\n            return [\r\n                ...state,\r\n                {\r\n                    _id: action.payload._id, // Используем возвращенный ID от сервера\r\n                    name: 'New Directory',\r\n                    image: '',\r\n                    setsCount: 0,\r\n                    isEditing: true,\r\n                    editedName: '',\r\n                    editedImage: '',\r\n                },\r\n            ];\r\n        case 'GET_DIRECTORIES':\r\n            return action.payload;\r\n        case 'UPDATE_DIRECTORY_SETS_COUNT':\r\n            return state.map((directory) =>\r\n                directory._id === action.payload.id\r\n                    ? { ...directory, setsCount: action.payload.setsCount }\r\n                    : directory\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default directoryReducer;","const initialState = [];\r\n\r\nconst setReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_SET':\r\n            const updatedState = state.map((set) =>\r\n                set._id === action.payload.id\r\n                    ? { ...set, isEditing: false, name: action.payload.editedName, image: action.payload.editedImage }\r\n                    : set\r\n            );\r\n            return updatedState;\r\n\r\n        case 'DELETE_SET':\r\n            return state.filter((set) => set._id !== action.payload.id);\r\n\r\n        case 'ADD_SET':\r\n            return [\r\n                ...state,\r\n                {\r\n                    _id: action.payload._id,\r\n                    directoryId: action.payload.directoryId,\r\n                    name: 'New Set',\r\n                    image: '',\r\n                    cardsCount: 0,\r\n                    isEditing: true,\r\n                    editedName: '',\r\n                    editedImage: '',\r\n                }\r\n            ];\r\n        case 'GET_SETS':\r\n            return action.payload;\r\n        case 'UPDATE_SET_CARDS_COUNT':\r\n            return state.map((set) =>\r\n                set._id === action.payload.id\r\n                    ? { ...set, cardsCount: action.payload.cardsCount }\r\n                    : set\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setReducer;","const initialState = [];\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_CARD':\r\n            const updatedState = state.map((card) =>\r\n                card._id === action.payload.id\r\n                    ? {\r\n                        ...card,\r\n                        // isEditing: false, \r\n                        image: action.payload.editedImage,\r\n                        phrase: action.payload.editedPhrase,\r\n                        transcription: action.payload.editedTranscription,\r\n                        note: action.payload.editedNote,\r\n                        example1: action.payload.editedExample1,\r\n                        translation: action.payload.editedTranslation,\r\n                        example2: action.payload.editedExample2,\r\n                    }\r\n                    : card\r\n            );\r\n            return updatedState;\r\n\r\n        case 'DELETE_CARD':\r\n            return state.filter((set) => set._id !== action.payload.id);\r\n\r\n        case 'ADD_CARD':\r\n            return [\r\n                ...state,\r\n                {\r\n                    _id: action.payload._id,\r\n                    setId: action.payload.setId,\r\n                    directoryId: action.payload.directoryId,\r\n                    image: \"\",\r\n                    phrase: \"\",\r\n                    transcription: \"\",\r\n                    note: \"\",\r\n                    example1: \"\",\r\n                    translation: \"\",\r\n                    example2: \"\",\r\n                    editedImage: '',\r\n                    editedPhrase: '',\r\n                    editedTranscription: \"\",\r\n                    editedNote: \"\",\r\n                    editedExample1: \"\",\r\n                    editedTranslation: \"\",\r\n                    editedExample2: \"\",\r\n                    isEditing: true,\r\n                }\r\n            ];\r\n        case 'GET_CARDS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cardReducer;","import { combineReducers } from 'redux';\r\nimport sampleReducer from './sampleReducer';\r\nimport authReducer from './authReducer';\r\nimport directoryReducer from './directoryReducer';\r\nimport setReducer from './setReducer'\r\nimport cardReducer from './cardReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  sample: sampleReducer,\r\n  auth: authReducer,\r\n  directory: directoryReducer,\r\n  set: setReducer,\r\n  card: cardReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from '../reducers/rootReducer';\r\nimport axios from 'axios';\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk.withExtraArgument({ axios })))\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default configureStore;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../redux/actions/authActions';\r\n\r\nconst LoginForm = ({ onSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const error = useSelector((state) => state.auth.error);\r\n\r\n  const handleLogin = () => {\r\n    dispatch(login({ username, password }));\r\n    onSubmit({ username, password });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Имя пользователя:\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Пароль:\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <button className='btn-type1' onClick={handleLogin}>Войти</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;","import axios from 'axios';\r\n\r\nconst serverUrl = 'https://45.141.78.127:3001';\r\n// const serverUrl = 'http://localhost:3001';\r\n\r\nexport const login = ({ username, password }) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${serverUrl}/login`, { username, password });\r\n    // Dispatch an action for successful login\r\n    dispatch({ type: 'LOGIN_SUCCESS', payload: response.data });\r\n    const user = {\r\n      userId: response.data.user._id,\r\n      username: response.data.user.username,\r\n    };\r\n    // сохранение данных пользователя в local storage\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  } catch (error) {\r\n    // Dispatch an action for login failure\r\n    dispatch({ type: 'LOGIN_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const register = ({ username, password }) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(`${serverUrl}/register`, { username, password });\r\n    dispatch({ type: 'REGISTER_SUCCESS', payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: 'REGISTER_FAILURE', payload: error.message });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('user');\r\n  dispatch({ type: 'LOGOUT' });\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../redux/actions/authActions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({ onSubmit }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n  const error = useSelector((state) => state.auth.error);\r\n  const successMessage = useSelector((state) => state.auth.successMessage);\r\n\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      dispatch({ type: 'SET_IS_LOGIN', payload: true }); \r\n      dispatch({ type: 'SET_SUCCESS_MESSAGE', payload: successMessage });\r\n      // navigate('/login');\r\n  \r\n      // const timeoutId = setTimeout(() => {\r\n      //   dispatch({ type: 'CLEAR_SUCCESS_MESSAGE' });\r\n      // }, 3000);\r\n  \r\n      // return () => clearTimeout(timeoutId);\r\n    }\r\n  }, [successMessage, dispatch]);\r\n\r\n  const handleRegister = () => {\r\n    if (password === confirmPassword) {\r\n      dispatch(register({ username, password }));\r\n      onSubmit({ username, password });\r\n    } else {\r\n      dispatch({ type: 'REGISTER_FAILURE', payload: 'Passwords do not match' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>\r\n        Username:\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Confirm Password:\r\n        <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      </label>\r\n      <button className=\"btn-type1\" onClick={handleRegister}>Register</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoginForm from '../components/LoginForm';\r\nimport RegisterForm from '../components/RegisterForm';\r\nimport '../styles/LoginForm.css';\r\n\r\nconst LoginPage = () => {\r\n  const dispatch = useDispatch();\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const [formData, setFormData] = useState({});\r\n  const successMessage = useSelector((state) => state.auth.successMessage);\r\n  const navigate = useNavigate();\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (successMessage && isLogin) {\r\n      navigate('/home');\r\n    }\r\n  }, [successMessage, isLogin, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      navigate('/home');\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  const toggleMode = () => {\r\n    dispatch({ type: 'SET_IS_LOGIN', payload: !isLogin });\r\n  };\r\n\r\n  const handleFormSubmit = (data) => {\r\n    setFormData(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"logo-container\">\r\n        <img src=\"/max-logo.svg\" alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"login-container\">\r\n        {successMessage && (\r\n          <div className=\"success-message\">{successMessage}</div>\r\n        )}\r\n        <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n        {isLogin ? (\r\n          <LoginForm onSubmit={handleFormSubmit} />\r\n        ) : (\r\n          <RegisterForm onSubmit={handleFormSubmit} />\r\n        )}\r\n        <p onClick={toggleMode}>{isLogin ? 'Need to register?' : 'Already have an account?'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React, { useRef, useEffect } from 'react';\r\nimport '../styles/Confirm.css';\r\n\r\nconst Confirm = ({ message, onCancel, onConfirm }) => {\r\n\r\n    const confirmRef = useRef(null);\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (confirmRef.current === event.target) {\r\n            onCancel();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"confirm\" ref={confirmRef}>\r\n            <div className=\"confirm-content\">\r\n                <div className=\"confirm-cross\" onClick={onCancel}></div>\r\n                <div className=\"exclamation-mark\"></div>\r\n                <p className='confirm-text'>{message}</p>\r\n                <div className=\"confirm-buttons\">\r\n                    <div className='btn-type1' onClick={onCancel}>Cancel</div>\r\n                    <div className='btn-type2' onClick={onConfirm}>Exit</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Confirm;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addDirectory } from '../redux/actions/directoryActions';\r\nimport { logout } from '../redux/actions/authActions';\r\nimport Confirm from './Confirm';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/Header.css';\r\n\r\nconst Header = ({ onAddDirectory, onLogout, showAddDirectory, showGoToBack, showGoToSets, directoryId }) => {\r\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleExitClick = () => {\r\n    setIsConfirmOpen(true);\r\n  };\r\n\r\n  const handleCancelConfirm = () => {\r\n    setIsConfirmOpen(false);\r\n  };\r\n\r\n  const handleConfirmExit = () => {\r\n    onLogout();\r\n    setIsConfirmOpen(false);\r\n  };\r\n\r\n  const handleToDirsClick = () => {\r\n    navigate(`/home`);\r\n  };\r\n  const handleToSetsClick = () => {\r\n    navigate(`/sets/${directoryId}`);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"logo\" onClick={handleToDirsClick}></div>\r\n\r\n      {showAddDirectory && <div className=\"page-title\">Directories</div>}\r\n\r\n      <div style={{ display: 'flex' }}>\r\n        {showAddDirectory && (<>\r\n          <div className=\"add-directory\" onClick={onAddDirectory}></div>\r\n        </>)}\r\n        {showGoToBack && (<>\r\n          <div className=\"go-to-back\" onClick={handleToDirsClick}></div>\r\n        </>)}\r\n        {showGoToSets && (<>\r\n          <div className=\"go-to-back\" onClick={handleToSetsClick}></div>\r\n        </>)}\r\n        <div className=\"delimiter\"></div>\r\n        <div style={{ display: 'flex' }}>\r\n          <div className=\"logout\" onClick={handleExitClick}></div>\r\n          {isConfirmOpen && (\r\n            <Confirm\r\n              message=\"Do you really want to exit your account?\"\r\n              onCancel={handleCancelConfirm}\r\n              onConfirm={handleConfirmExit}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddDirectory: () => dispatch(addDirectory()),\r\n    onLogout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst serverUrl = 'https://45.141.78.127:3001';\r\n// const serverUrl = 'http://localhost:3001';\r\n\r\nexport const addDirectory = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const newDirectory = {\r\n                name: 'New Directory',\r\n                image: '',\r\n                setsCount: 0,\r\n            };\r\n\r\n            const storedUser = localStorage.getItem('user');\r\n            const user = JSON.parse(storedUser);\r\n            const userId = user.userId;\r\n\r\n            const response = await axios.post(`${serverUrl}/addDirectory`, {\r\n                ...newDirectory,\r\n                userId: userId,\r\n            });\r\n\r\n            dispatch({\r\n                type: actionTypes.ADD_DIRECTORY,\r\n                payload: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.error('Ошибка при добавлении директории:', error);\r\n            console.error('Response data:', error.response?.data);\r\n            console.error('Response status:', error.response?.status);\r\n            console.error('Response headers:', error.response?.headers);\r\n            throw error;\r\n        }\r\n    };\r\n};\r\n\r\nexport const editDirectory = (id, editedName, editedImage) => {\r\n    return {\r\n        type: actionTypes.EDIT_DIRECTORY,\r\n        payload: { id, editedName, editedImage },\r\n    };\r\n};\r\n\r\nexport const saveDirectory = (id, editedName, editedImage) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            const user = JSON.parse(storedUser);\r\n            const userId = user.userId;\r\n            // Отправка запроса к серверу для сохранения отредактированных данных в базе данных\r\n            await axios.put(`${serverUrl}/editDirectory/${id}`, { editedName, editedImage, userId });\r\n\r\n            dispatch({\r\n                type: actionTypes.SAVE_DIRECTORY,\r\n                payload: { id, editedName, editedImage },\r\n            });\r\n        } catch (error) {\r\n            console.error('Ошибка при сохранении директории:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteDirectory = (id) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            const user = JSON.parse(storedUser);\r\n            const userId = user.userId;\r\n            // Отправка запроса к серверу для удаления данных из базы данных\r\n            await axios.delete(`${serverUrl}/deleteDirectory/${id}?userId=${userId}`);\r\n\r\n            dispatch({\r\n                type: actionTypes.DELETE_DIRECTORY,\r\n                payload: { id },\r\n            });\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении директории:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const getDirectories = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const storedUser = localStorage.getItem('user');\r\n            const user = JSON.parse(storedUser);\r\n            const userId = user.userId;\r\n            const response = await axios.get(`${serverUrl}/directories/${userId}`);\r\n            const directories = response.data;\r\n            dispatch({\r\n                type: actionTypes.GET_DIRECTORIES,\r\n                payload: directories,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error getting directories:', error);\r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport '../styles/Loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Popup.css';\r\nimport Loader from './Loader';\r\n\r\nconst SearchPopup = ({ onClose, onImageSelect }) => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await axios.get(\r\n                `https://pixabay.com/api/?key=33256265-9311bbeda59bd85787262c6fb&q=${encodeURIComponent(searchQuery)}&image_type=illustration&per_page=50`\r\n            );\r\n            setSearchResults(response.data.hits);\r\n        } catch (error) {\r\n            console.error('Error searching images:', error);\r\n        } finally {\r\n            setIsLoading(false); // Устанавливаем isLoading в false после завершения загрузки\r\n        }\r\n    };\r\n\r\n    const handleImageSelect = (imageUrl) => {\r\n        onImageSelect(imageUrl);\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-popup\">\r\n            <div className=\"search-header\">\r\n                <div className='search-input-wrap'>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                handleSearch();\r\n                            }\r\n                        }}\r\n                        placeholder=\"Searching image\"\r\n                    />\r\n                    <div className='loupe' onClick={handleSearch}></div>\r\n                </div>\r\n                <div className=\"close-icon\" onClick={onClose}></div>\r\n            </div>\r\n            <div className=\"search-results\">\r\n                {isLoading ? (\r\n                    <div className=\"loader-wrap\"><Loader /></div>\r\n                ) : (\r\n                    searchResults.length > 0 ? (\r\n                        searchResults.map((result) => (\r\n                            <div className=\"search-item\" key={result.id}\r\n                                onClick={() => handleImageSelect(result.previewURL)}\r\n                                style={{\r\n                                    backgroundImage: `url(${result.previewURL})`,\r\n                                    backgroundSize: 'contain'\r\n                                }}>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"search-result-note\">No search results. Try changing your search query.</p>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editDirectory, saveDirectory, deleteDirectory } from '../redux/actions/directoryActions';\r\nimport SearchPopup from './SearchPopup';\r\nimport Loader from './Loader';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DirectoryTile = ({ _id, name, image, setsCount, editedName, editedImage, onSave, onDelete }) => {\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [localEditedName, setLocalEditedName] = useState(editedName || '');\r\n    const [localEditedImage, setLocalEditedImage] = useState(image || '');\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const defaultImage = process.env.PUBLIC_URL + '/images/folder.png';\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            setLocalEditedName(name || '');\r\n        }\r\n    }, [isEditing, editedName, editedImage, name, image]);\r\n\r\n    useEffect(() => {\r\n        if (selectedImage) {\r\n            setLocalEditedImage(selectedImage);\r\n            setSelectedImage('');\r\n        }\r\n    }, [selectedImage]);\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url(${localEditedImage || defaultImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '80px',\r\n        height: '80px',\r\n        marginRight: '15px',\r\n        borderRadius: '8px'\r\n    };\r\n\r\n    // BLL functions //\r\n    const handleSave = () => {\r\n        onSave(_id, localEditedName, localEditedImage);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\nconst handleDeleteClick = () => {\r\n        setIsConfirmOpen(true);\r\n    }\r\n    const handleCancelConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n    };\r\n    const handleDelete = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            await onDelete(_id);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setIsEditing(true);\r\n    };\r\n    // --- //\r\n\r\n    // PopUp functions //\r\n    const handleSearchClick = () => {\r\n        setIsSearching(true);\r\n    };\r\n\r\n    const handleSearchClose = () => {\r\n        setIsSearching(false);\r\n    };\r\n\r\n    const handleImageSelect = (selectedImage) => {\r\n        // Обработка выбора изображения из SearchPopup\r\n        setLocalEditedImage(selectedImage);\r\n    };\r\n    // --- //\r\n\r\n    //обработчик для перехода на SetsPage\r\n    const handleToSetsClick = () => {\r\n        navigate(`/sets/${_id}`, { state: { directoryName: name } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"directory-tile\">\r\n            {isConfirmOpen && (\r\n                <div className=\"directory-popup\">\r\n                    {isLoading && <Loader />}\r\n                    {!isLoading && (\r\n                        <>\r\n                            <div className=\"directory-popup-crose\" onClick={handleCancelConfirm}></div>\r\n                            <p className=\"directory-confirm-text\"><div className=\"set-popup-icon\"></div>Delete the directory?</p>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div className='btn-type1 directory-confirm-btn' onClick={handleCancelConfirm}>canсel</div>\r\n                                <div className='btn-type2 directory-confirm-btn' onClick={handleDelete}>delete</div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n            \r\n            <div className=\"directory-image\" style={imageStyle}></div>\r\n\r\n            {isSearching && (\r\n                <SearchPopup\r\n                    onClose={handleSearchClose}\r\n                    onImageSelect={handleImageSelect}\r\n                />\r\n            )}\r\n\r\n            {isEditing ? (\r\n                <div className=\"directory-info\">\r\n                    <input\r\n                        className=\"directory-input\"\r\n                        type=\"text\"\r\n                        value={localEditedName}\r\n                        onChange={(e) => setLocalEditedName(e.target.value)}\r\n                        placeholder=\"Название директории\"\r\n                    />\r\n                    <div className=\"directory-edit-buttons\">\r\n                        <div className=\"btn-type2 btn-choose-img\" onClick={handleSearchClick}><div className=\"camera\"></div><span className=\"btn-text\">picture</span></div>\r\n                        <div className=\"save-directory btns mobile\" onClick={handleSave}></div>\r\n                        <div className=\"delete-directory btns mobile\" onClick={handleDeleteClick}></div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"directory-info\">\r\n                    <div className=\"directory-name\">{name}</div>\r\n                    <div className=\"sets-count\">{setsCount} sets</div>\r\n                    <div className='directory-btns btns_mobile'>\r\n                        <div className=\"btn-type1\" onClick={handleToSetsClick}>&rArr; to sets</div>\r\n                        <div className=\"edit-directory btns\" onClick={handleEdit}></div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isEditing ? (\r\n                <>\r\n                    <div className=\"save-directory btns desctop\" onClick={handleSave}></div>\r\n                    <div className=\"delete-directory btns desctop\" onClick={handleDeleteClick}></div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className=\"btn-type1 btns_desctop\" onClick={handleToSetsClick}>&rArr; to sets</div>\r\n                    <div className=\"edit-directory btns btns_desctop\" onClick={handleEdit}></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const directory = state.directory.find((dir) => dir.id === ownProps.id);\r\n    return {\r\n        isEditing: ownProps.isEditing || false,\r\n        editedName: ownProps.editedName || '',\r\n        editedImage: ownProps.editedImage || '',\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEdit: (id) => dispatch(editDirectory(id)),\r\n        onSave: (id, editedName, editedImage) => {\r\n            dispatch(saveDirectory(id, editedName, editedImage));\r\n        },\r\n        onDelete: (id) => dispatch(deleteDirectory(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DirectoryTile);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\nimport DirectoryTile from '../components/DirectoryTile';\r\nimport Loader from '../components/Loader';\r\nimport { getDirectories } from '../redux/actions/directoryActions';\r\nimport '../styles/HomePage.css';\r\n\r\nconst HomePage = ({ directories, onGetDirectories }) => {\r\n  const [isAddingDirectory, setIsAddingDirectory] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true); // Устанавливаем isLoading в true при начале загрузки\r\n        const result = await onGetDirectories();\r\n        setIsLoading(false); // Устанавливаем isLoading в false после завершения загрузки\r\n      } catch (error) {\r\n        setError(error.message); // Устанавливаем error, если произошла ошибка\r\n        setIsLoading(false); // Устанавливаем isLoading в false в случае ошибки\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [onGetDirectories]);\r\n\r\n  const handleAddDirectory = () => {\r\n    setIsAddingDirectory(true);\r\n  };\r\n\r\n  const reversedDirectories = Array.isArray(directories) ? [...directories].reverse() : [];\r\n\r\n  return (\r\n    <div className=\"home-page page\">\r\n      <Header showAddDirectory={true} showGoToBack={false}/>\r\n\r\n      <div className=\"content\">\r\n        {isLoading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <div className=\"error-message\">\r\n            <p>{error}</p>\r\n          </div>\r\n        ) : reversedDirectories.length > 0 ? (\r\n          reversedDirectories.map((directory) => (\r\n            <DirectoryTile key={directory._id} {...directory} />\r\n          ))\r\n        ) : (\r\n          <div className=\"page-description\">\r\n            <p>Your directories will be here</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isAddingDirectory && (\r\n        <DirectoryTile\r\n          key=\"new\"\r\n          id=\"new\"\r\n          name=\"\"\r\n          image=\"\"\r\n          setsCount={0}\r\n          isEditing={true}\r\n          editedName=\"\"\r\n          editedImage=\"\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    directories: state.directory,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetDirectories: () => dispatch(getDirectories()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst serverUrl = 'https://45.141.78.127:3001';\r\n// const serverUrl = 'http://localhost:3001';\r\n\r\nexport const addSet = (directoryId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const newSet = {\r\n                name: 'New Set',\r\n                image: '',\r\n                cardsCount: 0,\r\n            };\r\n\r\n            const response = await axios.post(`${serverUrl}/addSet`, {\r\n                ...newSet,\r\n                directoryId: directoryId,\r\n            });\r\n\r\n            dispatch({\r\n                type: actionTypes.ADD_SET,\r\n                payload: response.data,\r\n            });\r\n\r\n            const updatedSetsCount = getState().set.length;\r\n            dispatch(updateDirectorySetsCount(directoryId, updatedSetsCount));\r\n\r\n        } catch (error) {\r\n            console.error('Error of adding set:', error);\r\n            console.error('Response data:', error.response?.data);\r\n            console.error('Response status:', error.response?.status);\r\n            console.error('Response headers:', error.response?.headers);\r\n            throw error;\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateDirectorySetsCount = (id, setsCount) => {\r\n    return {\r\n        type: actionTypes.UPDATE_DIRECTORY_SETS_COUNT,\r\n        payload: { id, setsCount },\r\n    };\r\n};\r\n\r\nexport const editSet = (id, editedName, editedImage) => {\r\n    return {\r\n        type: actionTypes.EDIT_SET,\r\n        payload: { id, editedName, editedImage },\r\n    };\r\n};\r\n\r\nexport const saveSet = (id, editedName, editedImage, directoryId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            // Отправка запроса к серверу для сохранения отредактированных данных в базе данных\r\n            await axios.put(`${serverUrl}/editSet/${id}`, { editedName, editedImage, directoryId });\r\n\r\n            dispatch({\r\n                type: actionTypes.SAVE_SET,\r\n                payload: { id, editedName, editedImage },\r\n            });\r\n        } catch (error) {\r\n            console.error('Ошибка при сохранении набора:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteSet = (id, directoryId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            // Отправка запроса к серверу для удаления данных из базы данных\r\n            await axios.delete(`${serverUrl}/deleteSet/${id}?directoryId=${directoryId}`);\r\n\r\n            dispatch({\r\n                type: actionTypes.DELETE_SET,\r\n                payload: { id },\r\n            });\r\n\r\n            const updatedSetsCount = getState().set.length;\r\n            dispatch(updateDirectorySetsCount(directoryId, updatedSetsCount));\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении набора:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const getSets = (directoryId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.get(`${serverUrl}/sets/${directoryId}`);\r\n            const sets = response.data;\r\n            dispatch({\r\n                type: actionTypes.GET_SETS,\r\n                payload: sets,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error getting sets:', error);\r\n        }\r\n    };\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editSet, saveSet, deleteSet } from '../redux/actions/setActions';\r\nimport SearchPopup from './SearchPopup';\r\nimport Loader from './Loader';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/SetTile.css';\r\n\r\n\r\nconst SetTile = ({ _id, name, image, cardsCount, editedName, editedImage, onSave, onDelete, directoryId }) => {\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [localEditedName, setLocalEditedName] = useState(editedName || '');\r\n    const [localEditedImage, setLocalEditedImage] = useState(image || '');\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const defaultImage = process.env.PUBLIC_URL + '/images/cards.png';\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            setLocalEditedName(name || '');\r\n        }\r\n    }, [isEditing, editedName, editedImage, name, image]);\r\n\r\n    useEffect(() => {\r\n        if (selectedImage) {\r\n            setLocalEditedImage(selectedImage);\r\n            setSelectedImage('');\r\n        }\r\n    }, [selectedImage]);\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url(${localEditedImage || defaultImage})`,\r\n        backgroundSize: `${localEditedImage ? 'cover' : 'contain'}`,\r\n        backgroundPosition: 'top center',\r\n        backgroundRepeat: 'no-repeat',\r\n        minWidth: '80px',\r\n        height: '80px',\r\n        marginRight: '15px',\r\n        borderRadius: '8px',\r\n    };\r\n\r\n    // BLL functions //\r\n    const handleSave = () => {\r\n        onSave(_id, localEditedName, localEditedImage, directoryId);\r\n        setIsEditing(false);\r\n    };\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n    const handleDeleteClick = () => {\r\n        setIsConfirmOpen(true);\r\n    }\r\n    const handleCancelConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n    };\r\n    const handleDelete = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            await onDelete(_id, directoryId);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setIsEditing(true);\r\n    };\r\n    // --- //\r\n\r\n    // PopUp functions //\r\n    const handleSearchClick = () => {\r\n        setIsSearching(true);\r\n    };\r\n\r\n    const handleSearchClose = () => {\r\n        setIsSearching(false);\r\n    };\r\n\r\n    const handleImageSelect = (selectedImage) => {\r\n        // Обработка выбора изображения из SearchPopup\r\n        setLocalEditedImage(selectedImage);\r\n    };\r\n    // --- //\r\n\r\n    //обработчик перехода к редактору карт\r\n    const handleToCreatorClick = () => {\r\n        navigate(`/creator/${directoryId}/${_id}`, { state: { setName: name } });\r\n    };\r\n    const handleToViewerClick = () => {\r\n        navigate(`/viewer/${directoryId}/${_id}`, { state: { setName: name } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"set-tile\">\r\n            {isConfirmOpen && (\r\n                <div className=\"set-popup\">\r\n                    {isLoading && <Loader />}\r\n                    {!isLoading && (\r\n                        <>\r\n                            <div className=\"set-popup-crose\" onClick={handleCancelConfirm}></div>\r\n                            <p className=\"set-confirm-text\"><div className=\"set-popup-icon\"></div>Delete the set?</p>\r\n                            <div style={{display: 'flex'}}>\r\n                                <div className='btn-type1 set-confirm-btn' onClick={handleCancelConfirm}>canсel</div>\r\n                                <div className='btn-type2 set-confirm-btn' onClick={handleDelete}>delete</div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            )}\r\n            <div className=\"set-image\" style={imageStyle}></div>\r\n\r\n            {isSearching && (\r\n                <SearchPopup\r\n                    onClose={handleSearchClose}\r\n                    onImageSelect={handleImageSelect}\r\n                />\r\n            )}\r\n\r\n            {isEditing ? (\r\n                <div className=\"set-info\">\r\n                    <input\r\n                        className=\"set-input\"\r\n                        maxLength=\"25\"\r\n                        type=\"text\"\r\n                        value={localEditedName}\r\n                        onChange={(e) => setLocalEditedName(e.target.value)}\r\n                        placeholder=\"Название директории\"\r\n                    />\r\n                    <div className=\"set-edit-buttons\">\r\n                        <div className=\"btn-type2\" onClick={handleSearchClick}><div className=\"camera\"></div><span className=\"btn-text\">picture</span></div>\r\n                        <div className=\"save-set btns mobile\" onClick={handleSave}></div>\r\n                        <div className=\"delete-set btns mobile\" onClick={handleDeleteClick}></div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"set-info\">\r\n                    <div className=\"set-name\">{name}</div>\r\n                    <div className=\"cards-count\">{cardsCount} cards</div>\r\n                    <div className='btns_mobile'>\r\n                        <div className=\"btn-type3 btn-creat\" onClick={handleToCreatorClick}><div className='set-tile-btn-icon-creat'></div><span className=\"btn-text\">creat</span></div>\r\n                        <div className=\"btn-type1 btn-view\" onClick={handleToViewerClick}><div className='set-tile-btn-icon-view'></div><span className=\"btn-text\">view</span></div>\r\n                        <div className=\"edit-set btns\" onClick={handleEdit}></div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isEditing ? (\r\n                <>\r\n                    <div className=\"save-set btns desctop\" onClick={handleSave}></div>\r\n                    <div className=\"delete-set btns desctop\" onClick={handleDeleteClick}></div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className='btns_desctop'>\r\n                        <div className=\"btn-type3 btn-creat\" onClick={handleToCreatorClick}><div className='set-tile-btn-icon-creat'></div><span className=\"btn-text\">creat</span></div>\r\n                        <div className=\"btn-type1 btn-view\" onClick={handleToViewerClick}><div className='set-tile-btn-icon-view'></div><span className=\"btn-text\">view</span></div>\r\n                    </div>\r\n                    <div className=\"edit-set btns btns_desctop\" onClick={handleEdit}></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const set = state.set.find((set) => set.id === ownProps.id);\r\n    return {\r\n        isEditing: ownProps.isEditing || false,\r\n        editedName: ownProps.editedName || '',\r\n        editedImage: ownProps.editedImage || '',\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEdit: (id) => dispatch(editSet(id)),\r\n        onSave: (id, editedName, editedImage, directoryId) => {\r\n            dispatch(saveSet(id, editedName, editedImage, directoryId));\r\n        },\r\n        onDelete: (id, directoryId) => dispatch(deleteSet(id, directoryId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetTile);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addSet } from '../redux/actions/setActions';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getSets } from '../redux/actions/setActions';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Header from '../components/Header';\r\nimport SetTile from '../components/SetTile';\r\nimport '../styles/SetsPage.css';\r\n\r\nconst SetsPage = ({ sets, onAddSet, onGetSets }) => {\r\n\r\n    const location = useLocation();\r\n    const directoryName = location.state?.directoryName || 'Directory';\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { directoryId } = useParams();\r\n\r\n    const reversedSets = Array.isArray(sets) ? [...sets].reverse() : [];\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setIsLoading(true); // Устанавливаем isLoading в true при начале загрузки\r\n                const result = await onGetSets(directoryId);\r\n                setIsLoading(false); // Устанавливаем isLoading в false после завершения загрузки\r\n            } catch (error) {\r\n                setError(error.message); // Устанавливаем error, если произошла ошибка\r\n                setIsLoading(false); // Устанавливаем isLoading в false в случае ошибки\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [onGetSets, directoryId]);\r\n\r\n    return (\r\n        <div className=\"sets-page page\">\r\n            <Header showAddDirectory={false} showGoToBack={true} showGoToSets={false} />\r\n            <div className=\"content\">\r\n                <div className=\"sets-container\">\r\n                    <div className=\"sets-content-header\">\r\n                        <h2 className=\"sets-title\">{directoryName}</h2>\r\n                        <div className=\"add-set\" onClick={() => onAddSet(directoryId)}></div>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n\r\n                        {isLoading ? (\r\n                            <Loader />\r\n                        ) : error ? (\r\n                            <div className=\"error-message\">\r\n                                <p>{error}</p>\r\n                            </div>\r\n                        ) : reversedSets.length > 0 ? (\r\n                            reversedSets.map((set) => (\r\n                                <SetTile key={set._id} {...set} />\r\n                            ))\r\n                        ) : (\r\n                            <div className=\"page-description\">\r\n                                <p>Your sets will be here</p>\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sets: state.set,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onGetSets: (directoryId) => dispatch(getSets(directoryId)),\r\n        onAddSet: (directoryId) => dispatch(addSet(directoryId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetsPage);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst serverUrl = 'https://45.141.78.127:3001';\r\n// const serverUrl = 'http://localhost:3001';\r\n\r\nexport const addCard = (directoryId, setId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const newCard = {\r\n                image: \"\",\r\n                phrase: \"\",\r\n                transcription: \"\",\r\n                note: \"\",\r\n                example1: \"\",\r\n                translation: \"\",\r\n                example2: \"\"\r\n            };\r\n\r\n            const response = await axios.post(`${serverUrl}/addCard`, {\r\n                ...newCard,\r\n                directoryId: directoryId,\r\n                setId, setId\r\n            });\r\n\r\n            dispatch({\r\n                type: actionTypes.ADD_CARD,\r\n                payload: response.data,\r\n            });\r\n\r\n            const updatedCardsCount = getState().card.length;\r\n            dispatch(updateSetCardsCount(setId, updatedCardsCount));\r\n\r\n        } catch (error) {\r\n            console.error('Error of adding card:', error);\r\n            console.error('Response data:', error.response?.data);\r\n            console.error('Response status:', error.response?.status);\r\n            console.error('Response headers:', error.response?.headers);\r\n            throw error;\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateSetCardsCount = (id, cardsCount) => {\r\n    return {\r\n        type: actionTypes.UPDATE_SET_CARDS_COUNT,\r\n        payload: { id, cardsCount },\r\n    };\r\n};\r\n\r\nexport const editCard = (id, editedPhrase, editedImage) => {\r\n    return {\r\n        type: actionTypes.EDIT_CARD,\r\n        payload: { id, editedPhrase, editedImage },\r\n    };\r\n};\r\n\r\nexport const saveCard = (id, editedImage, editedPhrase, editedTranscription, editedNote, editedExample1, editedTranslation, editedExample2, directoryId, setId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            // Отправка запроса к серверу для сохранения отредактированных данных в базе данных\r\n            await axios.put(`${serverUrl}/editCard/${id}`, { editedImage, editedPhrase, editedTranscription, editedNote, editedExample1, editedTranslation, editedExample2, directoryId, setId });\r\n\r\n            dispatch({\r\n                type: actionTypes.SAVE_CARD,\r\n                payload: { id, editedImage, editedPhrase, editedTranscription, editedNote, editedExample1, editedTranslation, editedExample2 },\r\n            });\r\n        } catch (error) {\r\n            console.error('Ошибка при сохранении карточки:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteCard = (id, setId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            // Отправка запроса к серверу для удаления данных из базы данных\r\n            await axios.delete(`${serverUrl}/deleteCard/${id}?setId=${setId}`);\r\n\r\n            dispatch({\r\n                type: actionTypes.DELETE_CARD,\r\n                payload: { id },\r\n            });\r\n\r\n            const updatedCardsCount = getState().card.length;\r\n            dispatch(updateSetCardsCount(setId, updatedCardsCount));\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении карточки:', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const getCards = (setId) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await axios.get(`${serverUrl}/cards/${setId}`);\r\n            const cards = response.data;\r\n            dispatch({\r\n                type: actionTypes.GET_CARDS,\r\n                payload: cards,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error getting cards:', error);\r\n        }\r\n    };\r\n};","import React from 'react';\r\nimport Loader from './Loader';\r\n\r\nconst CardEditMode = ({\r\n    imageStyle, handleSearchClick, isChanged, handleSave,\r\n    handleDeleteClick, handleInputChange, isConfirmOpen, isLoading,\r\n    handleCancelConfirm, handleDelete, localEditedPhrase, setLocalEditedPhrase,\r\n    localEditedTranscription, setLocalEditedTranscription, localEditedNote,setLocalEditedNote,\r\n    localEditedExample1, setLocalEditedExample1, localEditedTranslation, setLocalEditedTranslation,\r\n    localEditedExample2, setLocalEditedExample2,\r\n}) => (\r\n    <div className=\"card-tile\">\r\n        {isConfirmOpen && (\r\n            <div className=\"card-popup\">\r\n                {isLoading && <Loader />}\r\n                {!isLoading && (\r\n                    <>\r\n                        <div className=\"card-popup-crose\" onClick={handleCancelConfirm}></div>\r\n                        <div className=\"card-popup-icon\"></div>\r\n                        <p className=\"card-confirm-text\">Delete the card?</p>\r\n                        <div className='btn-type1 card-confirm-btn' onClick={handleCancelConfirm}>canсel</div>\r\n                        <div className='btn-type2 card-confirm-btn' onClick={handleDelete}>delete</div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        )}\r\n        <div className=\"card-side1\">\r\n            <div className='card-image-container card-row'>\r\n                <div className=\"card-image\" style={imageStyle}></div>\r\n                <div className=\"btn-type2-short\" onClick={handleSearchClick}><div className=\"camera\"></div></div>\r\n                {isChanged && (\r\n                    <div className=\"save-card btns\" onClick={handleSave}></div>\r\n                )}\r\n                {!isChanged && (\r\n                    <div className=\"save-card-disact btns\"></div>\r\n                )}\r\n                <div className=\"delete-card btns\" onClick={handleDeleteClick}></div>\r\n            </div>\r\n            <input\r\n                className=\"card-input\"\r\n                maxLength=\"30\"\r\n                type=\"text\"\r\n                value={localEditedPhrase}\r\n                onChange={(e) => handleInputChange(setLocalEditedPhrase, e)}\r\n                placeholder=\"Word or phrase\"\r\n            />\r\n            <input\r\n                className=\"card-input\"\r\n                maxLength=\"30\"\r\n                type=\"text\"\r\n                value={localEditedTranscription}\r\n                onChange={(e) => handleInputChange(setLocalEditedTranscription, e)}\r\n                placeholder=\"Transcription\"\r\n            />\r\n            <input\r\n                className=\"card-input\"\r\n                maxLength=\"30\"\r\n                type=\"text\"\r\n                value={localEditedNote}\r\n                onChange={(e) => handleInputChange(setLocalEditedNote, e)}\r\n                placeholder=\"Additional information\"\r\n            />\r\n            <textarea\r\n                className=\"card-input\"\r\n                maxLength=\"60\"\r\n                type=\"text\"\r\n                value={localEditedExample1}\r\n                onChange={(e) => handleInputChange(setLocalEditedExample1, e)}\r\n                placeholder=\"Example of using this phrase\"\r\n            />\r\n        </div>\r\n        <div className=\"card-side2\">\r\n            <input\r\n                className=\"card-input\"\r\n                maxLength=\"30\"\r\n                type=\"text\"\r\n                value={localEditedTranslation}\r\n                onChange={(e) => handleInputChange(setLocalEditedTranslation, e)}\r\n                // onChange={(e) => setLocalEditedTranslation(e.target.value)}\r\n                placeholder=\"Translation\"\r\n            />\r\n            <textarea\r\n                className=\"card-input\"\r\n                maxLength=\"60\"\r\n                type=\"text\"\r\n                value={localEditedExample2}\r\n                onChange={(e) => handleInputChange(setLocalEditedExample2, e)}\r\n                // onChange={(e) => setLocalEditedExample2(e.target.value)}\r\n                placeholder=\"Additional information\"\r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CardEditMode;\r\n","import React, { useState } from 'react';\r\nimport '../styles/CardViewMode.css';\r\n\r\nconst CardViewMode = ({\r\n    image,\r\n    defaultImage,\r\n    phrase,\r\n    transcription,\r\n    note,\r\n    example1,\r\n    translation,\r\n    example2,\r\n}) => {\r\n\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url(${image || defaultImage})`,\r\n        backgroundSize: 'contain',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n    };\r\n\r\n    const handleFlip = () => {\r\n        setIsFlipped(!isFlipped);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`card-tile view-mode ${isFlipped ? 'flipped' : ''}`}\r\n            onClick={handleFlip}\r\n        >\r\n            <div className=\"card-side1_view\">\r\n                <div className=\"card-image_view\" style={imageStyle}></div>\r\n                <p className=\"card-phrase_view\">{phrase}</p>\r\n                {transcription && (\r\n                    <p className=\"card-transcription_view\">[{transcription}]</p>\r\n                )}\r\n                {note && (\r\n                    <p className=\"card-note_view\">{note}</p>\r\n                )}\r\n                {example1 && (\r\n                    <p className=\"card-example_view\">{example1}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"card-side2_view\">\r\n                {translation && (\r\n                    <p className=\"card-translation_view\">{translation}</p>\r\n                )}\r\n                {example2 && (\r\n                    <p className=\"card-example_view\">{example2}</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardViewMode;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editCard, saveCard, deleteCard } from '../redux/actions/cardActions';\r\nimport SearchPopup from './SearchPopup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CardEditMode from './CardEditMode';\r\nimport '../styles/Card.css';\r\nimport CardViewMode from './CardViewMode';\r\n\r\n\r\nconst Card = ({\r\n    _id,\r\n    image,\r\n    phrase,\r\n    transcription,\r\n    note,\r\n    example1,\r\n    translation,\r\n    example2,\r\n    editedImage,\r\n    editedPhrase,\r\n    editedTranscription,\r\n    editedNote,\r\n    editedExample1,\r\n    editedTranslation,\r\n    editedExample2,\r\n    onSave,\r\n    onDelete,\r\n    directoryId,\r\n    setId,\r\n    creating\r\n}) => {\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(creating);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isChanged, setIsChanged] = useState(false);\r\n\r\n    const [localEditedImage, setLocalEditedImage] = useState(image || '');\r\n    const [localEditedPhrase, setLocalEditedPhrase] = useState(editedPhrase || '');\r\n    const [localEditedTranscription, setLocalEditedTranscription] = useState(editedTranscription || '');\r\n    const [localEditedNote, setLocalEditedNote] = useState(editedNote || '');\r\n    const [localEditedExample1, setLocalEditedExample1] = useState(editedExample1 || '');\r\n    const [localEditedTranslation, setLocalEditedTranslation] = useState(editedTranslation || '');\r\n    const [localEditedExample2, setLocalEditedExample2] = useState(editedExample2 || '');\r\n\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const defaultImage = process.env.PUBLIC_URL + '/images/cards.png';\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            setLocalEditedPhrase(phrase || '');\r\n            setLocalEditedTranscription(transcription || '');\r\n            setLocalEditedNote(note || '');\r\n            setLocalEditedExample1(example1 || '');\r\n            setLocalEditedTranslation(translation || '');\r\n            setLocalEditedExample2(example2 || '');\r\n        }\r\n    }, [isEditing, editedImage, editedPhrase,\r\n        editedTranscription, editedNote, editedExample1,\r\n        editedTranslation, editedExample2,\r\n        image, phrase, transcription, note,\r\n        example1, translation, example2]);\r\n\r\n    useEffect(() => {\r\n        if (selectedImage) {\r\n            setLocalEditedImage(selectedImage);\r\n            setSelectedImage('');\r\n        }\r\n    }, [selectedImage]);\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url(${localEditedImage || defaultImage})`,\r\n        backgroundSize: 'contain',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '70px',\r\n        height: '70px',\r\n        marginRight: '15px',\r\n        borderRadius: '8px'\r\n    };\r\n\r\n    const handleInputChange = (valueSetter, e) => {\r\n        valueSetter(e.target.value);\r\n        setIsChanged(true);\r\n    };\r\n\r\n    // BLL functions //\r\n    const handleSave = () => {\r\n        if (isChanged) {\r\n            onSave(_id, localEditedImage, localEditedPhrase, localEditedTranscription, localEditedNote, localEditedExample1, localEditedTranslation, localEditedExample2, directoryId, setId);\r\n            setIsChanged(false);\r\n        }\r\n    };\r\n\r\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\r\n\r\n    const handleDeleteClick = () => {\r\n        setIsConfirmOpen(true);\r\n    }\r\n    const handleCancelConfirm = () => {\r\n        setIsConfirmOpen(false);\r\n    };\r\n    const handleDelete = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            await onDelete(_id, setId);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEdit = () => {\r\n        setIsEditing(true);\r\n    };\r\n    // --- //\r\n\r\n    // Search PopUp functions //\r\n    const handleSearchClick = () => {\r\n        setIsSearching(true);\r\n    };\r\n\r\n    const handleSearchClose = () => {\r\n        setIsSearching(false);\r\n    };\r\n\r\n    const handleImageSelect = (selectedImage) => {\r\n        setLocalEditedImage(selectedImage);\r\n        setIsChanged(true);\r\n    };\r\n    // --- //\r\n\r\n    return (\r\n        <>\r\n        {isEditing ? (\r\n                <CardEditMode\r\n                    {...{\r\n                        isConfirmOpen, isLoading, handleCancelConfirm, handleDelete,\r\n                    }}\r\n                    {...{\r\n                        imageStyle, handleSearchClick, isChanged,\r\n                        handleSave, handleDeleteClick, handleInputChange,\r\n                    }}\r\n                    {...{\r\n                        localEditedPhrase, setLocalEditedPhrase,\r\n                        localEditedTranscription, setLocalEditedTranscription,\r\n                        localEditedNote, setLocalEditedNote,\r\n                        localEditedExample1, setLocalEditedExample1,\r\n                        localEditedTranslation, setLocalEditedTranslation,\r\n                        localEditedExample2, setLocalEditedExample2,\r\n                    }}\r\n                />\r\n            ) : (\r\n                <CardViewMode\r\n                    {...{\r\n                        image,\r\n                        defaultImage,\r\n                        phrase,\r\n                        transcription,\r\n                        note,\r\n                        example1,\r\n                        translation,\r\n                        example2,\r\n                    }}\r\n                />\r\n            )}\r\n\r\n            {isSearching && (\r\n                <SearchPopup\r\n                    onClose={handleSearchClose}\r\n                    onImageSelect={handleImageSelect}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const card = state.card.find((card) => card.id === ownProps.id);\r\n    return {\r\n        isEditing: ownProps.isEditing || false,\r\n        editedImage: ownProps.editedImage || '',\r\n        editedPhrase: ownProps.editedPhrase || '',\r\n        editedTranscription: ownProps.editedTranscription || '',\r\n        editedNote: ownProps.editedNote || '',\r\n        editedExample1: ownProps.editedExample1 || '',\r\n        editedTranslation: ownProps.editedTranslation || '',\r\n        editedExample2: ownProps.editedExample2 || '',\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onEdit: (id) => dispatch(editCard(id)),\r\n        onSave: (id, editedImage, editedPhrase,\r\n            editedTranscription, editedNote, editedExample1,\r\n            editedTranslation, editedExample2,\r\n            directoryId, setId) => {\r\n            dispatch(saveCard(id, editedImage, editedPhrase,\r\n                editedTranscription, editedNote, editedExample1,\r\n                editedTranslation, editedExample2,\r\n                directoryId, setId));\r\n        },\r\n        onDelete: (id, setId) => dispatch(deleteCard(id, setId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);","import React, { useEffect, useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../redux/actions/cardActions';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCards } from '../redux/actions/cardActions';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Header from '../components/Header';\r\nimport Card from '../components/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/CardsPage.css';\r\n\r\nconst Creator = ({ cards, onAddCard, onGetCards }) => {\r\n    \r\n    const cardsContentHeaderStyle = {\r\n        backgroundColor: '#d9b216'\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const setName = location.state?.setName || 'Set';\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { directoryId, setId } = useParams();\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const reversedCards = Array.isArray(cards) ? [...cards].reverse() : [];\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const result = await onGetCards(setId);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [onGetCards, setId]);\r\n\r\n    const [addingCard, setAddingCard] = useState(false);\r\n\r\n    const handleAddCard = async () => {\r\n        setAddingCard(true);\r\n        try {\r\n            await onAddCard(directoryId, setId);\r\n            setActiveIndex(0);\r\n        } catch (error) {\r\n            console.error(\"Error adding card:\", error);\r\n        } finally {\r\n            setAddingCard(false);\r\n        }\r\n    };\r\n\r\n    const handleToViewerClick = () => {\r\n        navigate(`/viewer/${directoryId}/${setId}`, { state: { setName: setName } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cards-page page\">\r\n            <Header showAddDirectory={false} showGoToBack={false} showGoToSets={true} directoryId={directoryId} />\r\n            <div className=\"content\">\r\n                <div className=\"cards-container\">\r\n                    <div className=\"cards-content-header\" style={cardsContentHeaderStyle}>\r\n                        <h2 className=\"content-title\">{setName}</h2>\r\n                        <div className=\"cards-header-nav\">\r\n                            <div className=\"go-to-view\" onClick={handleToViewerClick}></div>\r\n                            <div className=\"add-card\" onClick={handleAddCard}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n\r\n                        {isLoading || addingCard ? (\r\n                            <Loader />\r\n                        ) : error ? (\r\n                            <div className=\"error-message\">\r\n                                <p>{error}</p>\r\n                            </div>\r\n                        ) : reversedCards.length > 0 ? (\r\n                            <Carousel interval={null} activeIndex={activeIndex} onSelect={(index) => setActiveIndex(index)}>\r\n                                {reversedCards.map((card) => (\r\n                                    <Carousel.Item key={card._id}>\r\n                                        <Card creating={true} viewing={false} {...card} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        ) : (\r\n                            <div className=\"page-description\">\r\n                                <p>Your cards will be here</p>\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cards: state.card,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onGetCards: (setId) => dispatch(getCards(setId)),\r\n        onAddCard: (directoryId, setId) => dispatch(addCard(directoryId, setId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Creator);","import React, { useEffect, useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from '../redux/actions/cardActions';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCards } from '../redux/actions/cardActions';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Header from '../components/Header';\r\nimport Card from '../components/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/CardsPage.css';\r\n\r\nconst Viewer = ({ cards, onGetCards }) => {\r\n    \r\n    const cardsContentHeaderStyle = {\r\n        backgroundColor: '#525266'\r\n    };\r\n    \r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const setName = location.state?.setName || 'Set';\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { directoryId, setId } = useParams();\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const reversedCards = Array.isArray(cards) ? [...cards].reverse() : [];\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const result = await onGetCards(setId);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [onGetCards, setId]);\r\n\r\n    const handleToCreatorClick = () => {\r\n        navigate(`/creator/${directoryId}/${setId}`, { state: { setName: setName } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cards-page page\">\r\n            <Header showAddDirectory={false} showGoToBack={false} showGoToSets={true} directoryId={directoryId} />\r\n            <div className=\"content\">\r\n                <div className=\"cards-container\">\r\n                    <div className=\"cards-content-header\" style={cardsContentHeaderStyle}>\r\n                        <h2 className=\"content-title\">{setName}</h2>\r\n                        <div className=\"cards-header-nav\">\r\n                            <div className=\"go-to-creat\" onClick={handleToCreatorClick}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container-content\">\r\n\r\n                        {isLoading ? (\r\n                            <Loader />\r\n                        ) : error ? (\r\n                            <div className=\"error-message\">\r\n                                <p>{error}</p>\r\n                            </div>\r\n                        ) : reversedCards.length > 0 ? (\r\n                            <Carousel interval={null} activeIndex={activeIndex} onSelect={(index) => setActiveIndex(index)}>\r\n                                {reversedCards.map((card) => (\r\n                                    <Carousel.Item key={card._id}>\r\n                                        <Card creating={false} viewing={true} {...card} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        ) : (\r\n                            <div className=\"page-description\">\r\n                                <p>Your cards will be here</p>\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cards: state.card,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onGetCards: (setId) => dispatch(getCards(setId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Viewer);","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport LoginPage from './pages/LoginPage';\r\nimport HomePage from './pages/HomePage';\r\nimport SetsPage from './pages/SetsPage';\r\nimport Creator from './pages/Creator';\r\nimport Viewer from './pages/Viewer';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const isUserAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route\r\n          path=\"/home\"\r\n          element={isUserAuthenticated ? <HomePage /> : <Navigate to=\"/\" replace />}\r\n        />\r\n        <Route\r\n          path=\"/sets/:directoryId\"\r\n          element={isUserAuthenticated ? <SetsPage /> : <Navigate to=\"/\" replace />} />\r\n        <Route\r\n          path=\"/creator/:directoryId/:setId\"\r\n          element={isUserAuthenticated ? <Creator /> : <Navigate to=\"/\" replace />}\r\n        />\r\n        <Route\r\n          path=\"/viewer/:directoryId/:setId\"\r\n          element={isUserAuthenticated ? <Viewer /> : <Navigate to=\"/\" replace />}\r\n        />\r\n        <Route path=\"/\" element={<LoginPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/configureStore';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = configureStore();\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\n\r\n// Регистрация service worker\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', () => {\r\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\r\n      console.log('Service Worker registered with scope:', registration.scope);\r\n    }, error => {\r\n      console.log('Service Worker registration failed:', error);\r\n    });\r\n  });\r\n}\r\n\r\nroot.render(\r\n  <Provider store={store}>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n  </Provider>\r\n);"],"sourceRoot":""}